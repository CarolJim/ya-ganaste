buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        google()
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.21.6'
        classpath 'com.android.tools.build:gradle:3.1.0'
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.8.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.pagatodo.yaganaste"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 19
        versionName "4.0.3"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }
        useLibrary 'org.apache.http.legacy'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled = true
    }

    signingConfigs {
        debug {
            storeFile file("KeyPagaTodoDev.jks")
            storePassword "ptmobile"
            keyAlias "PTmobile"
            keyPassword "ptmobile"
        }

        release {
            storeFile file("cert.jks")
            storePassword "PagaTodo"
            keyAlias "ptmobile"
            keyPassword "PagaTodo"
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }
}
repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    google()
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

dependencies {
    // Freja Mass Compilation
    implementation files('libs/frejaMobileCore_486c0fb7a51.jar')
    // Dspread (Dongle) Compilation
    implementation files('libs/dspread_android_sdk_2.4.3.jar')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:'+rootProject.espressoCoreVersion, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation('cn.trinea.android.view.autoscrollviewpager:android-auto-scroll-view-pager:1.1.2') {
        exclude module: 'support-v4'
    }
    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true;
    }

    implementation 'com.android.support:multidex:'+rootProject.multidexVersion
    implementation 'com.android.support:appcompat-v7:'+rootProject.supportLibVersion
    implementation 'com.android.support:design:'+rootProject.supportLibVersion
    implementation 'com.android.support:support-v4:'+rootProject.supportLibVersion
    implementation 'com.android.support:cardview-v7:'+rootProject.supportLibVersion
    implementation 'com.android.support:recyclerview-v7:'+rootProject.supportLibVersion
    implementation 'com.google.android.gms:play-services-auth:'+rootProject.playServicesVersion
    implementation 'com.google.android.gms:play-services-plus:'+rootProject.playServicesVersion
    implementation 'com.google.android.gms:play-services:'+rootProject.playServicesVersion
    implementation 'com.google.android.gms:play-services-vision:'+rootProject.playServicesVersion
    implementation 'com.google.android.gms:play-services-maps:'+rootProject.playServicesVersion
    implementation 'com.bignerdranch.android:recyclerview-multiselect:+'
    implementation 'com.google.firebase:firebase-messaging:'+rootProject.firebaseVersion
    implementation 'com.google.firebase:firebase-core:'+rootProject.firebaseVersion
    implementation 'com.android.support.constraint:constraint-layout:'+rootProject.constraintLayoutVersion
    // Onboarding
    implementation 'com.matthew-tamlin:sliding-intro-screen:'+rootProject.onboardingVersion
    // Swipe Fragments Viewer
    implementation 'com.github.omadahealth:swipy:'+rootProject.swipyVersion
    // Circle Image Viewer
    implementation 'de.hdodenhof:circleimageview:'+rootProject.circleImageviewVerson
    // Show Configuration App By Google Chrome
    implementation 'com.facebook.stetho:stetho:'+rootProject.stethoVersion
    // Cropp Image
    implementation 'com.steelkiwi:cropiwa:'+rootProject.cropImageVersion
    // Download and Set Image By Url
    implementation 'com.squareup.picasso:picasso:'+rootProject.picassoVersion
    // QR Generator
    implementation 'com.google.zxing:core:'+rootProject.zxingVersion
    // Credit Card Scanner
    implementation 'io.card:android-sdk:'+rootProject.cardIoVersion
    // FlipView
    implementation 'eu.davidea:flipview:'+rootProject.flipViewVersion
    // Lottie Animation Lottie
    implementation 'com.airbnb.android:lottie:'+rootProject.lottieVersion
    // Splash Dots Loader
    implementation 'com.agrawalsuneet.androidlibs:dotsloader:'+rootProject.dotsLoaderVersion

    // Network Gradle Compilations
    implementation 'com.google.code.gson:gson:'+rootProject.gsonVersion
    implementation 'com.android.volley:volley:'+rootProject.volleyVersion
    implementation 'org.thoughtcrime.ssl.pinning:AndroidPinning:'+rootProject.pinningVersion

    testImplementation 'junit:junit:4.12'
    implementation 'com.jakewharton:butterknife:'+rootProject.butterknifeVersion
    annotationProcessor 'com.jakewharton:butterknife-compiler:'+rootProject.butterknifeVersion
    // Room DB Manager
    implementation 'android.arch.lifecycle:extensions:' + rootProject.archLifecycleVersion
    implementation 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion
    annotationProcessor 'android.arch.lifecycle:compiler:' + rootProject.archLifecycleVersion
    annotationProcessor 'android.arch.persistence.room:compiler:' + rootProject.archRoomVersion

}
apply plugin: 'com.google.gms.google-services'